{"title":"发现@babel/plugin-transform-react-jsx一个问题","slug":"发现-babel-plugin-transform-react-jsx一个问题","date":"2023-12-12T23:50:06.000Z","updated":"2023-12-22T14:38:01.380Z","comments":true,"path":"api/articles/发现-babel-plugin-transform-react-jsx一个问题.json","excerpt":null,"covers":["https://likaiqiang-blog.oss-cn-beijing.aliyuncs.com/images/d0f0b072-eb1f-42ed-b4db-8d9a2768fe35-image.png"],"content":"<p>前几天为fre这个库搭建启动环境时遇到一些问题，首先看我的webpack 配置。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">HtmlWebpackPlugin</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;html-webpack-plugin&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">    <span class=\"attr\">mode</span>: <span class=\"string\">&quot;development&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">entry</span>: <span class=\"string\">&#x27;./src/index.jsx&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">devtool</span>: <span class=\"string\">&#x27;source-map&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">output</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;main.js&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">path</span>: path.<span class=\"title function_\">resolve</span>(__dirname, <span class=\"string\">&#x27;dist&#x27;</span>),</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">module</span>:&#123;</span><br><span class=\"line\">        <span class=\"attr\">rules</span>: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.(?:js|mjs|cjs|jsx|ts|tsx)$/</span>,</span><br><span class=\"line\">                <span class=\"attr\">exclude</span>: <span class=\"regexp\">/node_modules/</span>,</span><br><span class=\"line\">                <span class=\"attr\">use</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">loader</span>: <span class=\"string\">&#x27;babel-loader&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">                        <span class=\"attr\">presets</span>: [</span><br><span class=\"line\">                            [<span class=\"string\">&#x27;@babel/preset-env&#x27;</span>, &#123; <span class=\"attr\">targets</span>: <span class=\"string\">&quot;defaults&quot;</span> &#125;]</span><br><span class=\"line\">                        ],</span><br><span class=\"line\">                        <span class=\"attr\">plugins</span>: [</span><br><span class=\"line\">                            [</span><br><span class=\"line\">                                <span class=\"string\">&#x27;@babel/plugin-transform-typescript&#x27;</span> <span class=\"comment\">//用这个插件来解析ts</span></span><br><span class=\"line\">                            ],</span><br><span class=\"line\">                            [</span><br><span class=\"line\">                                <span class=\"string\">&#x27;@babel/plugin-transform-react-jsx&#x27;</span>, <span class=\"comment\">//用这个插件来解析fre的jsx</span></span><br><span class=\"line\">                                &#123;</span><br><span class=\"line\">                                    <span class=\"attr\">runtime</span>: <span class=\"string\">&#x27;automatic&#x27;</span>,</span><br><span class=\"line\">                                    <span class=\"attr\">importSource</span>: <span class=\"string\">&#x27;fre&#x27;</span>,</span><br><span class=\"line\">                                &#125;,</span><br><span class=\"line\">                            ]</span><br><span class=\"line\">                        ]</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        ],</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">resolve</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">modules</span>: [path.<span class=\"title function_\">resolve</span>(__dirname, <span class=\"string\">&#x27;src&#x27;</span>,<span class=\"string\">&#x27;lib&#x27;</span>), <span class=\"string\">&#x27;node_modules&#x27;</span>],</span><br><span class=\"line\">        <span class=\"attr\">extensions</span>: [<span class=\"string\">&#x27;.ts&#x27;</span>,<span class=\"string\">&#x27;.js&#x27;</span>]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">devServer</span>:&#123;</span><br><span class=\"line\">        <span class=\"attr\">port</span>: <span class=\"number\">9000</span>,</span><br><span class=\"line\">        <span class=\"attr\">static</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">directory</span>: path.<span class=\"title function_\">join</span>(__dirname, <span class=\"string\">&#x27;./&#x27;</span>),</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">plugins</span>: [<span class=\"keyword\">new</span> <span class=\"title class_\">HtmlWebpackPlugin</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">template</span>: path.<span class=\"title function_\">join</span>(__dirname,<span class=\"string\">&#x27;./index.html&#x27;</span>)</span><br><span class=\"line\">    &#125;)],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>看起来没什么问题，但是运行时却报错了<br><img src=\"https://likaiqiang-blog.oss-cn-beijing.aliyuncs.com/images/d0f0b072-eb1f-42ed-b4db-8d9a2768fe35-image.png\" alt=\"d0f0b072-eb1f-42ed-b4db-8d9a2768fe35-image.png\"></p>\n<p>从错误的堆栈信息来看，是babel-parser报的错。很明显，这个错误跟正则表达式没什么关系，但是为什么babel-parser会把这段代码看成正则表达式呢，babel-parser的作用是把javascript解析成抽象语法树，常见的js语法肯定都支持，但是jsx不是标准的js语法，看babel-parser的文档，它支持一个plugins选项，比如你可以用以下代码来开启解析jsx与flow。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">&quot;@babel/parser&quot;</span>).<span class=\"title function_\">parse</span>(<span class=\"string\">&quot;code&quot;</span>, &#123;</span><br><span class=\"line\">  <span class=\"comment\">// parse in strict mode and allow module declarations</span></span><br><span class=\"line\">  <span class=\"attr\">sourceType</span>: <span class=\"string\">&quot;module&quot;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">plugins</span>: [</span><br><span class=\"line\">    <span class=\"comment\">// enable jsx and flow syntax</span></span><br><span class=\"line\">    <span class=\"string\">&quot;jsx&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;flow&quot;</span>,</span><br><span class=\"line\">  ],</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>但是我们毕竟不是直接用的babel-parser，肯定是babel-loader到babel-parser的调用过程中哪一步出错了。带着这个问题，我们来大概扒一扒babel-loader的代码。</p>\n<p><a href=\"https://github.com/babel/babel-loader/blob/v9.1.3/src/transform.js#L10\">transform.js#L10</a> 这里的transform来自babel-core，最终来自这里的<a href=\"https://github.com/babel/babel/blob/v7.23.6/packages/babel-core/src/transformation/index.ts#L34\">run</a>,这个方法有几部分非常关键。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 通过babel-parser把code转换成ast</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> file = <span class=\"keyword\">yield</span>* <span class=\"title function_\">normalizeFile</span>(</span><br><span class=\"line\">    config.<span class=\"property\">passes</span>,</span><br><span class=\"line\">    <span class=\"title function_\">normalizeOptions</span>(config),</span><br><span class=\"line\">    code,</span><br><span class=\"line\">    ast,</span><br><span class=\"line\">  );</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 通过babel-traverse结合各个plugin对ast进行增删改</span></span><br><span class=\"line\"> <span class=\"keyword\">yield</span>* <span class=\"title function_\">transformFile</span>(file, config.<span class=\"property\">passes</span>);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//把更改后的ast通过babel-generator还原成code</span></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (opts.<span class=\"property\">code</span> !== <span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">        (&#123; outputCode, outputMap &#125; = <span class=\"title function_\">generateCode</span>(config.<span class=\"property\">passes</span>, file));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">    e.<span class=\"property\">message</span> = <span class=\"string\">`<span class=\"subst\">$&#123;opts.filename ?? <span class=\"string\">&quot;unknown file&quot;</span>&#125;</span>: <span class=\"subst\">$&#123;e.message&#125;</span>`</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!e.<span class=\"property\">code</span>) &#123;</span><br><span class=\"line\">        e.<span class=\"property\">code</span> = <span class=\"string\">&quot;BABEL_GENERATE_ERROR&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> e;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们的问题是babel-parser不识别jsx语法，也就是normalizeFile方法部分。</p>\n<p><a href=\"https://github.com/babel/babel/blob/v7.23.6/packages/babel-core/src/transformation/normalize-file.ts#L50\">normalize-file.ts#L50</a> 这个parser是通过babel-core&#x2F;src&#x2F;parser&#x2F;index.ts导出的，最终调用了babel-parser导出的parse方法。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">parse</span>(code, parserOpts);</span><br></pre></td></tr></table></figure>\n<p>是不是和babel-parser文档上的例子很像，所以只要找到这个parserOpts从哪里来的以及包含哪些内容就能解决这个问题。<br>回到<a href=\"https://github.com/babel/babel/blob/v7.23.6/packages/babel-core/src/transformation/index.ts#L39\">run方法</a>，第二个参数normalizeOptions(config)就是parserOpts的来源。</p>\n<p><a href=\"https://github.com/babel/babel/blob/v7.23.6/packages/babel-core/src/transformation/normalize-opts.ts#L62\">normalize-opts.ts#L62</a><br>这里依次判断每个插件上是否有manipulateOptions方法，如果有调用并传入parserOpts。</p>\n<p>我们webpack配置中的@babel&#x2F;plugin-transform-typescript与@babel&#x2F;plugin-transform-react-jsx都有这个方法，先看@babel&#x2F;plugin-transform-typescript，这个插件继承自@babel&#x2F;plugin-syntax-typescript，里面有一句</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// https://github.com/babel/babel/blob/v7.23.6/packages/babel-plugin-syntax-typescript/src/index.ts#L59</span></span><br><span class=\"line\"><span class=\"title function_\">manipulateOptions</span>(<span class=\"params\">opts, parserOpts</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!process.<span class=\"property\">env</span>.<span class=\"property\">BABEL_8_BREAKING</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> &#123;plugins&#125; = parserOpts;</span><br><span class=\"line\">        <span class=\"comment\">// If the Flow syntax plugin already ran, remove it since Typescript</span></span><br><span class=\"line\">        <span class=\"comment\">// takes priority.</span></span><br><span class=\"line\">        <span class=\"title function_\">removePlugin</span>(plugins, <span class=\"string\">&quot;flow&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// If the JSX syntax plugin already ran, remove it because JSX handling</span></span><br><span class=\"line\">        <span class=\"comment\">// in TS depends on the extensions, and is purely dependent on &#x27;isTSX&#x27;.</span></span><br><span class=\"line\">        <span class=\"title function_\">removePlugin</span>(plugins, <span class=\"string\">&quot;jsx&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// These are now enabled by default in @babel/parser, but we push</span></span><br><span class=\"line\">        <span class=\"comment\">// them for compat with older versions.</span></span><br><span class=\"line\">        plugins.<span class=\"title function_\">push</span>(<span class=\"string\">&quot;objectRestSpread&quot;</span>, <span class=\"string\">&quot;classProperties&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isTSX) &#123;</span><br><span class=\"line\">            plugins.<span class=\"title function_\">push</span>(<span class=\"string\">&quot;jsx&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"comment\">// 这里，如果传递给这个插件的参数里有isTSX，将开启babel-parser的jsx plugin</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    parserOpts.<span class=\"property\">plugins</span>.<span class=\"title function_\">push</span>([</span><br><span class=\"line\">        <span class=\"string\">&quot;typescript&quot;</span>,</span><br><span class=\"line\">        &#123;disallowAmbiguousJSXLike, dts&#125;,</span><br><span class=\"line\">    ]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>再看看@babel&#x2F;plugin-transform-react-jsx，继承自@babel&#x2F;plugin-syntax-jsx</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//https://github.com/babel/babel/blob/v7.23.6/packages/babel-plugin-syntax-jsx/src/index.ts</span></span><br><span class=\"line\"><span class=\"title function_\">manipulateOptions</span>(<span class=\"params\">opts, parserOpts</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!process.<span class=\"property\">env</span>.<span class=\"property\">BABEL_8_BREAKING</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// If the Typescript plugin already ran, it will have decided whether</span></span><br><span class=\"line\">        <span class=\"comment\">// or not this is a TSX file.</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (</span><br><span class=\"line\">            parserOpts.<span class=\"property\">plugins</span>.<span class=\"title function_\">some</span>(</span><br><span class=\"line\">                <span class=\"function\"><span class=\"params\">p</span> =&gt;</span> (<span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(p) ? p[<span class=\"number\">0</span>] : p) === <span class=\"string\">&quot;typescript&quot;</span>,</span><br><span class=\"line\">            ) <span class=\"comment\">// 这里错了，不能单纯的说我用了@babel/plugin-transform-typescript，就return掉，应该判断是否开启了jsx plugin</span></span><br><span class=\"line\">        ) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    parserOpts.<span class=\"property\">plugins</span>.<span class=\"title function_\">push</span>(<span class=\"string\">&quot;jsx&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>所以，应该改成这样</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (parserOpts.<span class=\"property\">plugins</span>.<span class=\"title function_\">some</span>(<span class=\"function\"><span class=\"params\">p</span> =&gt;</span> (<span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(p) ? p[<span class=\"number\">0</span>] : p) === <span class=\"string\">&quot;typescript&quot;</span>) &amp;&amp; parserOpts.<span class=\"property\">plugins</span>.<span class=\"title function_\">includes</span>(<span class=\"string\">&#x27;jsx&#x27;</span>)) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样就好了。</p>\n","more":"<p>前几天为fre这个库搭建启动环境时遇到一些问题，首先看我的webpack 配置。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">HtmlWebpackPlugin</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;html-webpack-plugin&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">    <span class=\"attr\">mode</span>: <span class=\"string\">&quot;development&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">entry</span>: <span class=\"string\">&#x27;./src/index.jsx&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">devtool</span>: <span class=\"string\">&#x27;source-map&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">output</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;main.js&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">path</span>: path.<span class=\"title function_\">resolve</span>(__dirname, <span class=\"string\">&#x27;dist&#x27;</span>),</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">module</span>:&#123;</span><br><span class=\"line\">        <span class=\"attr\">rules</span>: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.(?:js|mjs|cjs|jsx|ts|tsx)$/</span>,</span><br><span class=\"line\">                <span class=\"attr\">exclude</span>: <span class=\"regexp\">/node_modules/</span>,</span><br><span class=\"line\">                <span class=\"attr\">use</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">loader</span>: <span class=\"string\">&#x27;babel-loader&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">                        <span class=\"attr\">presets</span>: [</span><br><span class=\"line\">                            [<span class=\"string\">&#x27;@babel/preset-env&#x27;</span>, &#123; <span class=\"attr\">targets</span>: <span class=\"string\">&quot;defaults&quot;</span> &#125;]</span><br><span class=\"line\">                        ],</span><br><span class=\"line\">                        <span class=\"attr\">plugins</span>: [</span><br><span class=\"line\">                            [</span><br><span class=\"line\">                                <span class=\"string\">&#x27;@babel/plugin-transform-typescript&#x27;</span> <span class=\"comment\">//用这个插件来解析ts</span></span><br><span class=\"line\">                            ],</span><br><span class=\"line\">                            [</span><br><span class=\"line\">                                <span class=\"string\">&#x27;@babel/plugin-transform-react-jsx&#x27;</span>, <span class=\"comment\">//用这个插件来解析fre的jsx</span></span><br><span class=\"line\">                                &#123;</span><br><span class=\"line\">                                    <span class=\"attr\">runtime</span>: <span class=\"string\">&#x27;automatic&#x27;</span>,</span><br><span class=\"line\">                                    <span class=\"attr\">importSource</span>: <span class=\"string\">&#x27;fre&#x27;</span>,</span><br><span class=\"line\">                                &#125;,</span><br><span class=\"line\">                            ]</span><br><span class=\"line\">                        ]</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        ],</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">resolve</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">modules</span>: [path.<span class=\"title function_\">resolve</span>(__dirname, <span class=\"string\">&#x27;src&#x27;</span>,<span class=\"string\">&#x27;lib&#x27;</span>), <span class=\"string\">&#x27;node_modules&#x27;</span>],</span><br><span class=\"line\">        <span class=\"attr\">extensions</span>: [<span class=\"string\">&#x27;.ts&#x27;</span>,<span class=\"string\">&#x27;.js&#x27;</span>]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">devServer</span>:&#123;</span><br><span class=\"line\">        <span class=\"attr\">port</span>: <span class=\"number\">9000</span>,</span><br><span class=\"line\">        <span class=\"attr\">static</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">directory</span>: path.<span class=\"title function_\">join</span>(__dirname, <span class=\"string\">&#x27;./&#x27;</span>),</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">plugins</span>: [<span class=\"keyword\">new</span> <span class=\"title class_\">HtmlWebpackPlugin</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">template</span>: path.<span class=\"title function_\">join</span>(__dirname,<span class=\"string\">&#x27;./index.html&#x27;</span>)</span><br><span class=\"line\">    &#125;)],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>看起来没什么问题，但是运行时却报错了<br><img src=\"https://likaiqiang-blog.oss-cn-beijing.aliyuncs.com/images/d0f0b072-eb1f-42ed-b4db-8d9a2768fe35-image.png\" alt=\"d0f0b072-eb1f-42ed-b4db-8d9a2768fe35-image.png\"></p>\n<p>从错误的堆栈信息来看，是babel-parser报的错。很明显，这个错误跟正则表达式没什么关系，但是为什么babel-parser会把这段代码看成正则表达式呢，babel-parser的作用是把javascript解析成抽象语法树，常见的js语法肯定都支持，但是jsx不是标准的js语法，看babel-parser的文档，它支持一个plugins选项，比如你可以用以下代码来开启解析jsx与flow。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">&quot;@babel/parser&quot;</span>).<span class=\"title function_\">parse</span>(<span class=\"string\">&quot;code&quot;</span>, &#123;</span><br><span class=\"line\">  <span class=\"comment\">// parse in strict mode and allow module declarations</span></span><br><span class=\"line\">  <span class=\"attr\">sourceType</span>: <span class=\"string\">&quot;module&quot;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">plugins</span>: [</span><br><span class=\"line\">    <span class=\"comment\">// enable jsx and flow syntax</span></span><br><span class=\"line\">    <span class=\"string\">&quot;jsx&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;flow&quot;</span>,</span><br><span class=\"line\">  ],</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>但是我们毕竟不是直接用的babel-parser，肯定是babel-loader到babel-parser的调用过程中哪一步出错了。带着这个问题，我们来大概扒一扒babel-loader的代码。</p>\n<p><a href=\"https://github.com/babel/babel-loader/blob/v9.1.3/src/transform.js#L10\">transform.js#L10</a> 这里的transform来自babel-core，最终来自这里的<a href=\"https://github.com/babel/babel/blob/v7.23.6/packages/babel-core/src/transformation/index.ts#L34\">run</a>,这个方法有几部分非常关键。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 通过babel-parser把code转换成ast</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> file = <span class=\"keyword\">yield</span>* <span class=\"title function_\">normalizeFile</span>(</span><br><span class=\"line\">    config.<span class=\"property\">passes</span>,</span><br><span class=\"line\">    <span class=\"title function_\">normalizeOptions</span>(config),</span><br><span class=\"line\">    code,</span><br><span class=\"line\">    ast,</span><br><span class=\"line\">  );</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 通过babel-traverse结合各个plugin对ast进行增删改</span></span><br><span class=\"line\"> <span class=\"keyword\">yield</span>* <span class=\"title function_\">transformFile</span>(file, config.<span class=\"property\">passes</span>);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//把更改后的ast通过babel-generator还原成code</span></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (opts.<span class=\"property\">code</span> !== <span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">        (&#123; outputCode, outputMap &#125; = <span class=\"title function_\">generateCode</span>(config.<span class=\"property\">passes</span>, file));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">    e.<span class=\"property\">message</span> = <span class=\"string\">`<span class=\"subst\">$&#123;opts.filename ?? <span class=\"string\">&quot;unknown file&quot;</span>&#125;</span>: <span class=\"subst\">$&#123;e.message&#125;</span>`</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!e.<span class=\"property\">code</span>) &#123;</span><br><span class=\"line\">        e.<span class=\"property\">code</span> = <span class=\"string\">&quot;BABEL_GENERATE_ERROR&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> e;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们的问题是babel-parser不识别jsx语法，也就是normalizeFile方法部分。</p>\n<p><a href=\"https://github.com/babel/babel/blob/v7.23.6/packages/babel-core/src/transformation/normalize-file.ts#L50\">normalize-file.ts#L50</a> 这个parser是通过babel-core&#x2F;src&#x2F;parser&#x2F;index.ts导出的，最终调用了babel-parser导出的parse方法。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">parse</span>(code, parserOpts);</span><br></pre></td></tr></table></figure>\n<p>是不是和babel-parser文档上的例子很像，所以只要找到这个parserOpts从哪里来的以及包含哪些内容就能解决这个问题。<br>回到<a href=\"https://github.com/babel/babel/blob/v7.23.6/packages/babel-core/src/transformation/index.ts#L39\">run方法</a>，第二个参数normalizeOptions(config)就是parserOpts的来源。</p>\n<p><a href=\"https://github.com/babel/babel/blob/v7.23.6/packages/babel-core/src/transformation/normalize-opts.ts#L62\">normalize-opts.ts#L62</a><br>这里依次判断每个插件上是否有manipulateOptions方法，如果有调用并传入parserOpts。</p>\n<p>我们webpack配置中的@babel&#x2F;plugin-transform-typescript与@babel&#x2F;plugin-transform-react-jsx都有这个方法，先看@babel&#x2F;plugin-transform-typescript，这个插件继承自@babel&#x2F;plugin-syntax-typescript，里面有一句</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// https://github.com/babel/babel/blob/v7.23.6/packages/babel-plugin-syntax-typescript/src/index.ts#L59</span></span><br><span class=\"line\"><span class=\"title function_\">manipulateOptions</span>(<span class=\"params\">opts, parserOpts</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!process.<span class=\"property\">env</span>.<span class=\"property\">BABEL_8_BREAKING</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> &#123;plugins&#125; = parserOpts;</span><br><span class=\"line\">        <span class=\"comment\">// If the Flow syntax plugin already ran, remove it since Typescript</span></span><br><span class=\"line\">        <span class=\"comment\">// takes priority.</span></span><br><span class=\"line\">        <span class=\"title function_\">removePlugin</span>(plugins, <span class=\"string\">&quot;flow&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// If the JSX syntax plugin already ran, remove it because JSX handling</span></span><br><span class=\"line\">        <span class=\"comment\">// in TS depends on the extensions, and is purely dependent on &#x27;isTSX&#x27;.</span></span><br><span class=\"line\">        <span class=\"title function_\">removePlugin</span>(plugins, <span class=\"string\">&quot;jsx&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// These are now enabled by default in @babel/parser, but we push</span></span><br><span class=\"line\">        <span class=\"comment\">// them for compat with older versions.</span></span><br><span class=\"line\">        plugins.<span class=\"title function_\">push</span>(<span class=\"string\">&quot;objectRestSpread&quot;</span>, <span class=\"string\">&quot;classProperties&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isTSX) &#123;</span><br><span class=\"line\">            plugins.<span class=\"title function_\">push</span>(<span class=\"string\">&quot;jsx&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"comment\">// 这里，如果传递给这个插件的参数里有isTSX，将开启babel-parser的jsx plugin</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    parserOpts.<span class=\"property\">plugins</span>.<span class=\"title function_\">push</span>([</span><br><span class=\"line\">        <span class=\"string\">&quot;typescript&quot;</span>,</span><br><span class=\"line\">        &#123;disallowAmbiguousJSXLike, dts&#125;,</span><br><span class=\"line\">    ]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>再看看@babel&#x2F;plugin-transform-react-jsx，继承自@babel&#x2F;plugin-syntax-jsx</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//https://github.com/babel/babel/blob/v7.23.6/packages/babel-plugin-syntax-jsx/src/index.ts</span></span><br><span class=\"line\"><span class=\"title function_\">manipulateOptions</span>(<span class=\"params\">opts, parserOpts</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!process.<span class=\"property\">env</span>.<span class=\"property\">BABEL_8_BREAKING</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// If the Typescript plugin already ran, it will have decided whether</span></span><br><span class=\"line\">        <span class=\"comment\">// or not this is a TSX file.</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (</span><br><span class=\"line\">            parserOpts.<span class=\"property\">plugins</span>.<span class=\"title function_\">some</span>(</span><br><span class=\"line\">                <span class=\"function\"><span class=\"params\">p</span> =&gt;</span> (<span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(p) ? p[<span class=\"number\">0</span>] : p) === <span class=\"string\">&quot;typescript&quot;</span>,</span><br><span class=\"line\">            ) <span class=\"comment\">// 这里错了，不能单纯的说我用了@babel/plugin-transform-typescript，就return掉，应该判断是否开启了jsx plugin</span></span><br><span class=\"line\">        ) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    parserOpts.<span class=\"property\">plugins</span>.<span class=\"title function_\">push</span>(<span class=\"string\">&quot;jsx&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>所以，应该改成这样</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (parserOpts.<span class=\"property\">plugins</span>.<span class=\"title function_\">some</span>(<span class=\"function\"><span class=\"params\">p</span> =&gt;</span> (<span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(p) ? p[<span class=\"number\">0</span>] : p) === <span class=\"string\">&quot;typescript&quot;</span>) &amp;&amp; parserOpts.<span class=\"property\">plugins</span>.<span class=\"title function_\">includes</span>(<span class=\"string\">&#x27;jsx&#x27;</span>)) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样就好了。</p>\n","categories":[],"tags":[]}